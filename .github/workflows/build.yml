name: build

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      GITHUB_EVENT_NAME: ${{ github.event_name }}
    strategy:
      fail-fast: false
      matrix:
        group:
          - "unit"
          - "docs"
        lamin_env:
          - "staging"
          - "prod"
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: ".github/workflows/build.yml"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
      - id: cache-postgres
        uses: actions/cache@v3
        with:
          path: ~/postgres.tar
          key: cache-postgres-0
      - if: steps.cache-postgres.outputs.cache-hit != 'true'
        run: docker pull postgres:latest && docker image save postgres:latest --output ~/postgres.tar
      - if: steps.cache-postgres.outputs.cache-hit == 'true'
        run: docker image load --input ~/postgres.tar
      - run: pip install -U laminci
      - run: nox -s lint
        if: ${{ matrix.lamin_env == 'prod' && matrix.group == 'unit' }}
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      # account for in a different job
      # - uses: "google-github-actions/auth@v0"
      #   with:
      #     credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      # - uses: "google-github-actions/setup-gcloud@v0"
      - run: nox -s "install(group='${{ matrix.group }}')"
      - run: nox -s "build(lamin_env='${{ matrix.lamin_env }}', group='${{ matrix.group }}')"
      - uses: actions/upload-artifact@v2
        if: ${{ matrix.lamin_env == 'prod' }}
        with:
          name: coverage--${{ matrix.group }}
          path: .coverage

  # a test group for testing user access to public buckets without AWS credentials
  noaws:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: ".github/workflows/build.yml"
      - run: pip install -U laminci
      - run: nox -s "install(group='noaws')"
      - run: nox -s noaws
      - uses: actions/upload-artifact@v2
        with:
          name: coverage--noaws
          path: .coverage

  # a test group for testing low-level hub functionality
  hub:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: checkout lnhub-rest
        uses: actions/checkout@v3
        with:
          repository: laminlabs/lnhub-rest
          token: ${{ secrets.GH_TOKEN_DEPLOY_LAMINAPP }}
          path: lnhub-rest
          ref: main
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: ".github/workflows/build.yml"
      - run: pip install -U laminci
      - run: nox -s "install(group='hub')"
      - uses: supabase/setup-cli@v1
      - run: |
          supabase start
          echo "$(supabase status -o env)" >> $GITHUB_ENV
      - run: nox -s "build(lamin_env='local', group='hub')"
      - uses: actions/upload-artifact@v2
        with:
          name: coverage--hub
          path: .coverage

  coverage:
    needs: [build, noaws, hub]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: ".github/workflows/build.yml"
      - run: |
          pip install coverage[toml]
          pip install --no-deps .
      - uses: actions/download-artifact@v2
      - name: run coverage
        run: |
          coverage combine coverage--*/.coverage*
          coverage report --fail-under=0
          coverage xml
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  docs:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: checkout lndocs
        uses: actions/checkout@v3
        with:
          repository: laminlabs/lndocs
          ssh-key: ${{ secrets.READ_LNDOCS }}
          path: lndocs
          ref: main
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: ".github/workflows/build.yml"
      - run: pip install -U laminci
      - run: nox -s "install(group='noaws')"
      - uses: actions/download-artifact@v2
      - run: nox -s docs
      - uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "_build/html"
          production-deploy: ${{ github.event_name == 'push' }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-commit-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
